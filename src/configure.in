################################################################
# [LibML - Machine Learning Library]
# http://libml.org
# Copyright (C) 2002 - 2003  LAGACHERIE Matthieu RICORDEAU Olivier
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version. This
# program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details. You should have
# received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,
# USA.

# SPECIAL NOTE (the beerware clause):
# This software is free software. However, it also falls under the beerware
# special category. That is, if you find this software useful, or use it
# every day, or want to grant us for our modest contribution to the
# free software community, feel free to send us a beer from one of
# your local brewery. Our preference goes to Belgium abbey beers and
# irish stout (Guiness for strength!), but we like to try new stuffs.

# Authors:
# Matthieu LAGACHERIE
# E-mail : matthieu@libml.org

# Olivier RICORDEAU
# E-mail : olivier@libml.org

################################################################

#
# NB: This file is highly inspired from
# the "autoconf input for Objective Caml programs" file
# by Jean-Christophe FILLIATRE
# http://www.lri.fr/~filliatr/ftp/ocaml/misc/configure.in
#

# the script generated by autoconf from this input will set the following
# variables:
#   OCAMLC        "ocamlc" if present in the path, or a failure
#                 or "ocamlc.opt" if present with same version number as ocamlc
#   OCAMLOPT      "ocamlopt" (or "ocamlopt.opt" if present), or "no"
#   OCAMLDEP      "ocamldep"
#   OCAMLLEX      "ocamllex" (or "ocamllex.opt" if present)
#   OCAMLYACC     "ocamlyac"
#   OCAMLLIB      the path to the ocaml standard library
#   OCAMLVERSION  the ocaml version number
#   OCAMLWEB      "ocamlweb" (not mandatory)
#   OCAMLWIN32    "yes"/"no" depending on Sys.os_type = "Win32"
#   CC            "path_to_gcc" or "" if not present (used for mld).
#   EXE           ".exe" if OCAMLWIN32=yes, "" otherwise
#   OPT           "opt"
#   BYTE          "byte"

AC_INIT(common/env.ml)

# Check for Ocaml compilers

# We first look for ocamlc in the path; if not present, we fail
AC_CHECK_PROG(OCAMLC,ocamlc,ocamlc,no)
if test "$OCAMLC" = no ; then
	AC_MSG_ERROR([CANNOT FIND OCAMLC! It is provided in the standard \
OCaml distribution: http://caml.inria.fr/ocaml/distrib.html])
fi

# We extract Ocaml version number and library path
OCAMLVERSION=`$OCAMLC -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
echo "ocaml version is $OCAMLVERSION"
OCAMLLIB=`$OCAMLC -v | tail -1 | cut -f 4 -d " "`
echo "ocaml library path is $OCAMLLIB"

# We enable bytecode compilation
BYTE=byte

# check for ocamlopt
AC_CHECK_PROG(OCAMLOPT,ocamlopt,ocamlopt,no)
if test "$OCAMLOPT" = no ; then
	AC_MSG_WARN([CANNOT FIND OCAMLOPT! Bytecode compilation only.])
else
	AC_MSG_CHECKING(ocamlopt version)
	TMPVERSION=`$OCAMLOPT -v | sed -n -e 's|.*version *\(.*\)$|\1|p' `
	if test "$TMPVERSION" != "$OCAMLVERSION" ; then
	    AC_MSG_RESULT(differs from ocamlc; ocamlopt discarded.)
	    OCAMLOPT=no
	else
	    AC_MSG_RESULT(ok)
	fi
fi

# check for ocamlmklib
AC_CHECK_PROG(OCAMLMKLIB,ocamlmklib,ocamlmklib,no)
if test "$OCAMLMKLIB" = no ; then
	AC_MSG_WARN([CANNOT FIND OCAMLMKLIB! Bytecode compilation only. \
ocamlmklib is part of the standard OCaml distribution: \
http://caml.inria.fr/ocaml/distrib.html])
fi

# enable native code compilation only if both ocamlopt and ocamlmklib are here.
OPT=
if test "$OCAMLOPT" != no -a "$OCAMLMKLIB" != no; then
   OPT=opt
fi

# ocamldep should be present in the path
#AC_CHECK_PROG(OCAMLDEP,ocamldep,ocamldep,no)
#if test "$OCAMLDEP" = no ; then
#	AC_MSG_ERROR(Cannot find ocamldep. ocamldep is part of the standard \
#OCaml distribution: http://caml.inria.fr/ocaml/distrib.html)
#fi

# ocamlfind should be present in the path
AC_CHECK_PROG(OCAMLFIND,ocamlfind,ocamlfind,no)
if test "$OCAMLFIND" = no ; then
	AC_MSG_ERROR(Cannot find ocamlfind (part of the findlib package). \
You can get it here: http://www.ocaml-programming.de/programming/findlib.html)
fi

OCAMLFINDPATH=`$OCAMLFIND printconf destdir`

# platform
AC_MSG_CHECKING(platform)
if echo "let _ = Sys.os_type" | ocaml | grep -q Win32; then
    AC_MSG_RESULT([WIIN32])
    OCAMLWIN32=yes
    EXE=.exe
else
    OCAMLWIN32=no
    EXE=
fi

# check for gcc.
AC_CHECK_PROG(CC,gcc,gcc,no)
if test "$CC" = no ; then
	AC_MSG_WARN([CANNOT FIND GCC! the mld daemon binary will not \
be builded. Please install gcc if you want it.])
	CC=
fi

# substitutions to perform
AC_SUBST(OCAMLC)
AC_SUBST(OCAMLOPT)
AC_SUBST(OCAMLDEP)
AC_SUBST(OCAMLFIND)
AC_SUBST(OCAMLFINDPATH)
AC_SUBST(OCAMLLEX)
AC_SUBST(OCAMLYACC)
AC_SUBST(BYTE)
AC_SUBST(OPT)
AC_SUBST(OCAMLVERSION)
AC_SUBST(OCAMLLIB)
AC_SUBST(OCAMLWEB)
AC_SUBST(OCAMLWIN32)
AC_SUBST(CC)
AC_SUBST(EXE)

# Finally create variables.Makefile from variables.Makefile.in
AC_OUTPUT(variables.Makefile)
chmod a-w variables.Makefile
